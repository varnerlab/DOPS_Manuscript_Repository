% $Header: svn://.../trunk/AMIGO2R2016/Kernel/OPT_solvers/ess_options_defaults.m 2086 2015-08-31 07:49:03Z evabalsa $
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                           eSS OPTIONS                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function opts=ess_options_defaults(varargin)


opts=[];                                                   %options defined by the user
opts.ndiverse=[];
opts.dim_refset=[];
opts.local.balance = 0.5;



if nargin > 0
	xdim = varargin{1};
	opts.maxtime=10*xdim;   % seconds                               
	opts.maxeval=200000;       
	opts.ndiverse=2*xdim;
	opts.log_var= 1:xdim;
    opts.inter_save=0;
else
	opts.maxtime=120;
	opts.maxeval=200000;
    opts.ndiverse = 'auto';
    opts.log_var = [];
	opts.inter_save=0;
end


opts.iterprint=1;
opts.local.iterprint = 1;
opts.local.solver='fminsearch';  % nl2sol | fmincon | ipopt | dhc | nomad | solnp | 'fminsearch'
opts.local.finish='fminsearch';  % nl2sol | fmincon | ipopt | dhc | nomad | solnp | 'fminsearch'
opts.dim_refset                =       'auto';         %Number of elements in Refset
opts.ndiverse                  =       'auto';         %Number of solutions generated by the diversificator
opts.local.n1                        =       'default';      %Number of iterations before applying local search for the 1st time
opts.local.n2                        =       'default';      %Number of minimum iterations of global search between 2 local calls

opts.local.nl2sol.grad                =   [];%'mkl';  %[];   Gradient computation in AMIGO
opts.local.nl2sol.maxiter             =     300;       % max number of iteration
opts.local.nl2sol.maxfeval            =     300;       % max number of function evaluation
opts.local.nl2sol.display             =       2;       % diaplay lvel: 0-2
opts.local.nl2sol.tolrfun             =    1e-6;       % relative function convergence
opts.local.nl2sol.tolafun             =    1e-6;       % absolute function convergence
opts.local.nl2sol.iterfun             =      [];       % iteration fcn callback
opts.local.nl2sol.objrtol             =    1e-6;       % relative tolerance used for the objective function computation



%opts.combination=[];
%opts.tolx=[];



% OTHER OPTIONS

%           opts.maxeval    = Maximum number of function evaluations
%                             (Default 1000)
%           opts.maxtime    = Maximum CPU time in seconds (Default 60)
%           opts.iterprint  = Print each iteration on screen: 0-Deactivated
%                             1-Activated (Default 1)
%           opts.plot       = Plots convergence curves: 0-Deactivated,
%                             1-Plot curves on line, 2-Plot final results
%                             (Default 0)
%           opts.weight     = Weight that multiplies the penalty term added
%                             to the objective function in constrained
%                             problems (Default 1000)
%           opts.log_var    = Indexes of the variables which will be used
%                             to generate diverse solutions in different
%                             orders of magnitude
%           opts.tolc       = Maximum absolute violation of the constraints
%                             (Default 1e-5)
%           opts.save_report= Saves Results, problem and opts in a .mat
%                             file (Default 0)
%           opts.report_name= Report name (Default 'ssm_report.mat')
%
%       Global options
%           opts.dim_refset         = Number of elements in Refset
%                                     (automatically calculated)
%           opts.ndiverse           = Number of solutions generated by the
%                                     diversificator (Default 10*nvar)
%           opts.initiate           = Type of Refset initialization
%                                     (Default 0)
%                                     0: Take bounds, middle point and fill
%                                     by euclidean distance
%                                     1: Evaluate all the diverse
%                                     solutions,take the dim_refset/2 best
%                                     solutions and fill by euclidean
%                                     distance
%           opts.combination        = Type of combination of Refset
%                                     elements (Default 1)
%                                     1: hyper-rectangles
%                                     2: linear combinations
%           opts.regenerate         = Type of Refset regeneration (Default
%                                     3)
%                                     1: Regeneration by distance diversity
%                                     2: Regeneration by direction
%                                     diversity
%                                     3: Randomly alternates 1 and 2
%           opts.delete             = Maximum number of Refset elements
%                                     deleted when regenerating Refset
%                                     (Default 'standard')
%                                     'standard': Maximum deleted elements=
%                                     dim_refset/2 (half of the elements)
%                                     'aggressive': Delete dim_refset-1
%                                     (all of them except the best solution
%                                     found)
%           opts.intens             = Iteration interval between
%                                     intensifications (default 10)
%           opts.tolf               = Function tolerance for joining the
%                                     Refset (default 1e-4)
%           opts.diverse_criteria   = Criterion for diversification in the
%                                     Refset (Default 1)
%                                     1: euclidean distance
%                                     2: tolerances
%           opts.tolx               = Variable tolerance for joining the
%                                     Refset when the euclidean distance is
%                                     deactivated(default 1e-3 for all
%                                     variables)
%       Local options
%           opts.local.solver               = Choose local solver
%                                             0: Local search deactivated
%                                             'fmincon'(Default),'fminsearch',
%                                             'nomad', 'solnp'
%                                             'n2fb','dn2fb','dhc','fsqp'
%                                             'ipopt','misqp','lsqnonlin'
%           opts.local.tol                  = Level of tolerance in local
%                                             search
%           opts.local.iterprint            = Print each iteration of local
%                                             solver on screen
%           opts.local.n1                   = Number of function
%                                             evaluations before applying
%                                             local search for the 1st time
%                                             (Default 100*nvar)
%           opts.local.n2                   = Minimum number of function
%                                             evaluations in the global
%                                             phase between 2 local calls
%                                             (Default 200*nvar)
%           opts.local.finish               = Applies local search to the
%                                             best solution found once the
%                                             optimization if finished
%                                             (same values as
%                                             opts.local.solver)
%           opts.local.bestx                = When activated (i.e. =1) only
%                                             applies local search to the
%                                             best solution found to
%                                             date,ignoring filters
%                                             (Default=0)
%           opts.local.merit_filter         = Activation of merit filter
%                                             for local search (Default 1)
%                                             0: Filter deactivated
%                                             1: Filter activated
%           opts.local.distance_filter      = Activation of distance filter
%                                             for local search (Default 1)
%                                             0: Filter deactivated
%                                             1: Filter activated
%           opts.local.thfactor             = Merit filter relaxation
%                                             parameter (Default 0.2)
%           opts.local.maxdistfactor        = Distance filter relaxation
%                                             parameter (Default 0.2)
%           opts.local.wait_maxdist_limit   = Apply distance filter
%                                             relaxation after this number
%                                             of function evaluations
%                                             without success in passing
%                                             filter (Default 20)
%           opts.local.wait_th_limit        = Apply merit filter relaxation
%                                             after this number of function
%                                             evaluations without success in 
%                                             passing filter (Default 20)
%
%           opts.strategy                   = If >0, it selects different
%                                             set of options to perform
%                                             different types of searches
%                                             1: Fast and efficient
%                                             2: Average (default options)
%                                             3: Robust



return